REFERENCE ASSEMBLY [log4net];
REFERENCE ASSEMBLY [Avro];
REFERENCE ASSEMBLY [Newtonsoft.Json];
REFERENCE ASSEMBLY [Microsoft.Analytics.Samples.Formats];


DECLARE @input_file string = @"adl://<enter data lake>.azuredatalakestore.net/meetup/<enter event hub>/meetup/{*}/{*}/{*}/{*}/{*}.avro";
DECLARE @output_file string = @"meetups_by_category_and_country.csv";

@rs =
    EXTRACT
        Body byte[]        
    FROM @input_file         
    USING new Microsoft.Analytics.Samples.Formats.ApacheAvro.AvroExtractor(@"    
        {
            ""type"":""record"",
            ""name"":""EventData"",
            ""namespace"":""Microsoft.ServiceBus.Messaging"",
            ""fields"" : [
                {""name"":""SequenceNumber"",""type"":""long""},
                {""name"":""Offset"",""type"":""string""},
                {""name"":""EnqueuedTimeUtc"",""type"":""string""},
                {""name"":""SystemProperties"",""type"":{""type"":""map"",""values"":[""long"",""double"",""string"",""bytes""]}},
                {""name"":""Properties"",""type"":{""type"":""map"",""values"":[""long"",""double"",""string"",""bytes""]}},
                {""name"":""Body"",""type"":[""null"",""bytes""]}
            ]
        }
    ");

@jsonLogs =
    SELECT Microsoft.Analytics.Samples.Formats.Json.JsonFunctions.JsonTuple(MeetupUSql.MeetupsByCategory.SafeJson(Encoding.UTF8.GetString(Body)), "..*") AS json           
    FROM @rs;

@meetups =
    SELECT json["id"]AS MeetupID,
           json["visibility"]AS MeetupVisibility,
           MeetupUSql.MeetupsByCategory.GetDateTimeFromEpochMilliseconds(json["time"]) AS MeetupDateTime,
           json["name"]AS MeetupName,
           json["venue.lon"]AS VenueLongitude,
           json["venue.lat"]AS VenueLatitude,
           MeetupUSql.MeetupsByCategory.GetCountryName(json["venue.country"]) AS VenueCountry,
           json["venue.city"]AS VenueCity,
           json["group.name"]AS GroupName,
           json["group.category.name"]AS GroupCategory,
           json["status"]AS MeetupStatus
    FROM @jsonLogs
    WHERE json["status"] != "canceled" AND json["status"] != "deleted";



@res =
    SELECT GroupCategory,   
           VenueCountry,
           COUNT(MeetupID) AS MeetupCount
    FROM @meetups AS m
    GROUP BY GroupCategory, VenueCountry;

OUTPUT @res 
    TO @output_file 
    ORDER BY MeetupCount DESC
    USING Outputters.Csv();
